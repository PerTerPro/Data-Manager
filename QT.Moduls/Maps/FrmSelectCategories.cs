using QT.Entities.Data;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace QT.Moduls.Maps
{
    public partial class FrmSelectCategories : Form
    {
        public static FrmSelectCategories frm = null;

        long data = 0;

        public static long ShowDialogChoose ()
        {
            string data = "";
            if (frm == null)
            {
                frm = new FrmSelectCategories();
            }
            frm.ShowDialog();
            long result = frm.data;
            return result;
        }

        public FrmSelectCategories()
        {
            InitializeComponent();

            SqlDb sqlDb = new SqlDb(QT.Entities.Server.ConnectionString);
            DataTable tbl = sqlDb.GetTblData(@"SELECT [ID]
      ,[Name]
      ,ParentID
  FROM [dbo].[ListClassification]
where ParentID in (select id from ListClassification)", CommandType.Text,
                new System.Data.SqlClient.SqlParameter[] { });

            this.treeList1.KeyFieldName = "ID";
            //this.treeList1.ParentFieldName = "ParentID";
           DataSet ds = new DataSet();
            ds.Tables.Add(tbl);
            this.treeList1.DataSource =ds;
            this.treeList1.DataMember = ds.Tables[0].TableName;
           

            //DataSet ds = new DataSet();
            //tbl.TableName = "Table1";
            //ds.Tables.Add(tbl);
            //ds.Relations.Add("Ref1", tbl.Columns["ParentID"], tbl.Columns["ID"]);
            //this.gridControl1.DataSource = ds;
            //this.gridControl1.DataMember = "Table1";
            //// This line of code is generated by Data Source Configuration Wizard
            //listClassificationTableAdapter1.Fill(qT_2DataSet1.ListClassification);
        }

        private void btnOK_Click(object sender, EventArgs e)
        {
            //this.data = Convert.ToInt32(this.gridView1.GetRowCellValue(this.gridView1.FocusedRowHandle, "Id"));
            this.Close();
        }

        private void btnEnd_Click(object sender, EventArgs e)
        {
            this.data = 0;
            this.Close();
        }

        private void FrmSelectCategories_FormClosing(object sender, FormClosingEventArgs e)
        {
            this.Visible = false;
            e.Cancel = true;
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {
            this.btnOK.PerformClick();
        }

        private void treeList1_FocusedNodeChanged(object sender, DevExpress.XtraTreeList.FocusedNodeChangedEventArgs e)
        {

        }

        private void FrmSelectCategories_Load(object sender, EventArgs e)
        {

        }
    }
}
